\input texinfo   @c -*-texinfo-*-
@finalout @comment{prevent TeX from printing a black rectangle beside overful hbox}
@c %**start of header
@setfilename manual_eqtlbma.info
@include version.texi
@settitle Manual for eQtlBma @value{VERSION}
@syncodeindex pg cp
@c %**end of header

@copying
This manual is for eQtlBma (version @value{VERSION}, @value{UPDATED}),
which implements Bayesian methods for eQTL detection.

Copyright @copyright{} 2012-2013 Timothee Flutre and Xiaoquan Wen.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover Texts being ``A GNU Manual,''
and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled ``GNU Free Documentation
License.''

(a) The FSF's Back-Cover Text is: ``You have the freedom to
copy and modify this GNU manual.  Buying copies from the FSF
supports it in developing GNU and promoting software freedom.''
@end quotation
@end copying

@dircategory Texinfo documentation system
@direntry
* sample: (sample)Invoking sample.
@end direntry

@titlepage
@title eQtlBma
@subtitle for version @value{VERSION}, @value{UPDATED}
@author Timothee Flutre (@email{tflutre@@uchicago.edu})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top eQtlBma

This manual is for eQtlBma (version @value{VERSION}, @value{UPDATED}).
@end ifnottex

@menu
* Overview::
* Inputs and options::
* Computing Bayes factors::
* Reading the outputs::
* Fitting the hierarchical model::
* Frequently asked questions::
* GNU Free Documentation License::
* Index::
@end menu


@node Overview
@chapter Overview

In genetics, ``QTL'' stands for quantitative trait locus.
It corresponds to a genotype-phenotype relationship in which variation in the genotype is associated with variation in the phenotype.
For the moment, this package focuses on the case where genotypes come from single nucleotide polymorphisms (SNP) 
and phenotypes are gene expression levels, thus explaining the ``e'' in ``eQTL''.

This package provides implementations of Bayesian methods with two goals in mind:
@itemize
@item
to detect eQTLs;
@item
to interpret them.
@end itemize

The implemented methods allow to jointly analyze data sets from multiple subgroups.
Here subgroups can be different tissues, cell types, populations, platforms, etc.
Currently two main tools are available:
@itemize
@item
@command{eqtlbma_bf} can compute summary statistics in each subgroup, 
Bayes Factors for the joint analysis using default hyperparameters, 
as well as perform permutations;
@item
@command{eqtlbma_hm} can fit the hierarchical model via an EM algorithm (maximum likelihood),
and thus provide ``empirical Bayes'' estimates of hyperparameters.
@end itemize

A third program, @command{eqtlbma_avg_bfs}, allows to average the raw Bayes Factors over
the hyperparameters' estimates, and then to compute various posterior probabilities of interest.

The details of the model are freely available online in the @url{http://dx.doi.org/10.1371/journal.pgen.1003486,article} by Flutre @emph{et al} (PLoS Genetics, 2013).

@c=============================================================================

@node Inputs and options
@chapter Inputs and options

@cindex inputs
@cindex options

Typing @command{eqtlbma_bf --help} or @command{eqtlbma_bf -h} gives the list of options.
As the help message is long, we may prefer to type @command{eqtlbma_bf -h | less} instead.

@section Genotypes

The option @option{--geno} requires a file as argument.
This file has two columns separated by a space or a tabulation, and one line per subgroup.
The first column is the identifier of the subgroup.
The second column is the path to the file containing the genotypes for this subgroup.
Here is an example:
@verbatim
Fibroblasts /data/genotypes.vcf.gz
LCLs /data/genotypes.vcf.gz
T-cells /data/genotypes.vcf.gz
@end verbatim

As you can see, the genotypes can all be in the same file, useful for instance if subgroups share some or all individuals.
But of course it is also possible to have one file per subgroup.

If you want to skip one subgroup, simply add a hashtag at the begining of the line, like this:
@verbatim
#Fibroblasts /data/genotypes.vcf.gz
@end verbatim

The files containing the genotypes can be in three possible formats.
Even though these formats can handle genetic variants other then SNPs,
we focus here on SNPs.
Moreover, for each format, the names of the individuals have to be indicated 
and they need to be the same as in the files containing the gene expression levels (see next section).

SNPs with missing genotypes are skipped with a warning.
It is therefore advised to impute them first with packages such as @url{http://mathgen.stats.ox.ac.uk/impute/impute_v2.html,IMPUTE2} or @url{http://stephenslab.uchicago.edu/blimp/index.html,BLIMP}.

The program @command{eqtlbma_bf} recognizes the original VCF format (it only requires the ``GT'' keyword in the FORMAT column).
See the specificiations on the website of the 1000 Genomes project @url{http://www.1000genomes.org/wiki/Analysis/Variant%20Call%20Format/vcf-variant-call-format-version-41,here}.

The program @command{eqtlbma_bf} can also handle a format very similar to the genotype format used by the IMPUTE program.
The exact specification of this format is described @url{http://www.stats.ox.ac.uk/~marchini/software/gwas/file_format.html,here}.
The only difference is that a header line is required.
Here is an example:
@verbatim
chr name coord a1 a2 <ind1>_a1a1 <ind1>_a1a2 <ind1>_a2a2 <ind2>_a1a1 ...
@end verbatim
where the ``<ind1>'''s have to be replaced by the name of the individuals in the given data set.

Finally, the program @command{eqtlbma_bf} also reads genotypes as allele dose, that is 0, 1, 2 or NA.
This format is also read by the R package @url{http://dx.doi.org/10.1093/bioinformatics/bts163,MatrixEQTL}.
Here is an example:
@verbatim
id ind1 ind2 ind3 ...
snp1 0 2 1 ...
snp2 0 1 0 ...
...
@end verbatim

The VCF and IMPUTE-like formats contain information about SNP coordinates,
but not the allele-dose format.
Therefore, with the latter, we also need to use the option @option{--scoord}
followed by a file containing the SNP coordinate in the @url{http://genome.ucsc.edu/FAQ/FAQformat.html,BED format}.
This means that the coordinates are 0-based, there is no header line and the column separator is a tabulation.

When parallelizing an analyzis over genes, we may want to only load the SNPs in @emph{cis} of the genes in the given job.
In order to speed-up this, the code uses the @url{https://github.com/samtools/tabix,tabix} library (Li, 2011).
More specifically, if a bgzip-compressed BED file named ``snp_coords.bed.gz'' is given to the option @option{--scoord},
the code will look for a tabix-indexed file named ``snp_coords.bed.gz.tbi''.
If this index file is not present, the SNP loading will be slower.

The option @option{--maf} allows to skip SNPs 
if their minor allele frequency in the genotype file is below a given threshold, for instance 0.05.

The option @option{--covar} requires a file as argument.
This file has two columns separated by a space or a tabulation, and one line per subgroup.
The first column is the identifier of the subgroup.
The second column is the path to the file containing the genotypes for this subgroup.

Each covariate file has to be in the following format:
@verbatim
id ind1 ind2 ...
covar1 0.32 0.11 ...
covar2 -1.0 0.8 ...
...
@end verbatim
Note that this format is also read by the R package MatrixEQTL.
Here again, no missing data is allowed.


@section Expression levels

As for the option @option{--geno}, the option @option{--exp} requires a file as argument.
This file has two columns separated by a space or a tabulation, and one line per subgroup.
The first column is the identifier of the subgroup.
The second column is the path to the file containing the genotypes for this subgroup.
Here is an example:
@verbatim
Fibroblasts /data/phenotypes_Fibroblasts.txt.gz
LCLs /data/phenotypes_LCLs.txt.gz
T-cells /data/phenotypes_T-cells.txt.gz
@end verbatim

The program @command{eqtlbma_bf} uses the term ``gene'' as the generic term for
the entities for which we have measurements.
Besides genes, they could be exons, transcripts, proteins, metabolites, etc, 
but we stick to genes in this manual.
(Note also that the program implements a model with a specific prior 
meaningful for genes but which may not be appropriate for some other entities.)

The actual files containing the expression levels have the following format:
@verbatim
ind1 ind2 ind3 ...
gene1 2.0495 1.0947 1.9924 ...
gene2 0.1928 -0.873 0.5284 ...
...
@end verbatim
Here again, this format is read by the R package MatrixEQTL and no missing data is allowed.

As the files with phenotypes don't contain the gene coordinates, we also need to use the option
@option{--gcoord} to specify gene coordinates in the @url{http://genome.ucsc.edu/FAQ/FAQformat.html,BED format}.
Genes with no coordinates will be skipped (useful when launching the program in parallel, see below).

The option @option{--qnorm} allows the program to transform the expression level of each gene
into the quantiles of a standard Normal distribution.
Otherwise, an FAQ entry at the end of this document indicates how to do this beforehand in R.


@section @emph{Cis} region

The @command{eqtlbma_bf} program focuses on detecting associations between SNPs and genes,
restricting itself to SNPs in a @emph{cis} candidate region of each gene.
The option @option{--anchor} allows to specify the boundary(ies) of this region,
with ``TSS'' for ``transcription start site'', ``TES'' for ``transcriptioneature end site'' and
``TSS+TES'' for both.
The option @option{--cis} precises the length of half of the @emph{cis} region (i.e. the radius), in base pairs.

As an example, @option{--anchor TSS --cis 100000} means that, for each gene, 
we will test all SNPs falling in the interval [-100kb,+100kb] centered on the
the start coordinate of the given gene as determined from the BED file given to option @option{--gcoord}.

Following the convention in @url{http://code.google.com/p/bedtools/,BEDTools}, 
the definition of the @emph{cis} region uses <= and >= instead of < and >.


@section Types of analysis

The option @option{--out} requires a character string and will use it 
as a prefix to name the output files.
Moreover, all output files are directly written in a compressed mode using @url{http://www.zlib.net/,zlib}.

The program @command{eqtlbma_bf} can perform several types of analysis.
The option @option{--type sep} means that the gene-SNP pairs will be tested for association using the subgroup-by-subgroup analysis (``separate'' analysis).
The option @option{--type join} means that the gene-SNP pairs will be tested for association using all subgroups jointly, which is more powerful in the context of eQTL studies, as shown in Flutre @emph{et al}.

At the beginning of each step, summary statistics are computed in each subgroup 
(estimates of effect sizes, standard errors, p-values, etc).
If the option @option{--outss} is not specified, the summary statistics won't be saved.
This can be useful in some cases: for instance, when we want to run a set of jobs with @option{--permsep 1} 
and another set of jobs with @option{--permsep 2}, both sets of jobs in the same directory.
We would typically use option @option{--outss} with the first set of jobs but not with the second,
otherwise both sets of jobs may overwrite each other's files.
However, note that we need the summary stats per subgroup if we want to later make meta-analysis-like @url{https://en.wikipedia.org/wiki/Forest_plot,forest plots}.

If the option @option{--outraw} is not specified, the raw Bayes Factors won't be saved.
This can be useful in some cases: for instance, when the number of subgroups is large (>15-20).
However, in order to fit the hierarchical model with the @command{eqtlbma_hm} program, we need all the raw BFs.

When using option @option{--type join}, we need to specify the options @option{--gridL} and @option{--gridS},
along with two files containing the grids over which the Bayes Factors are averaged.
A grid has two columns, 
the first contains values of @math{\phi^2} (prior variance of the standardized effects @math{b_s}'s in each subgroup) 
and the second values of @math{\omega^2} (prior variance of the average standardized effect @math{\bar{b}}).

The option @option{--gridL} specifies a ``large'' grid.
It is typically used for meta-analysis (see this preprint by Wen & Stephens on @url{http://arxiv.org/abs/1111.1210,arXiv}),
or for the BMAlite analysis (see the article by Flutre @emph{et al}).
The option @option{--gridS} specifies a ``small'' grid used with configurations (see Flutre @emph{et al}).
An FAQ entry below shows how to produce such files in R.

The option @option{--bfs} allows to specify which Bayes Factors we want to compute.
The acronym ``abf'' is used to mean ``approximated Bayes factor'' because the Bayes Factor
can't be calculated analytically and therefore has to be approximated using Laplace's method.
This approximation is very accurate, see the preprint by Wen & Stephens for more details.

Specifying @option{--bfs gen} computes the ``general'' BF 
corresponding to the consistent configuration using the large grid.
This ``general'' BF is useful in a meta-analysis setting, and fixed-effect and maximum-heterogeneity BFs are also calculated (see Wen & Stephens).

Specifying @option{--bfs sin} also computes the BF for each singleton, 
that is for configurations (100), (010) and (001) if there are 3 subgroups.
Also, the average of the ``general'' BF and each ``singleton'' BF is reported under the name ``abf.gen.sin''.
It corresponds to ``BF_BMAlite'' in Flutre @emph{et al}.

Finally, specifying @option{--bfs all} computes the BF for each configuration.
The weighted average of all these BFs is also reported under the name ``abf.all''.
It corresponds to ``BF_BMA'' in Flutre @emph{et al}.
Using @option{--bfs all} can be too costly when the number of subgroups exceeds 15 or 20.

The model implemented in this package is based on a linear regression, and there are several ways of
specifying the variance-covariance matrix of the errors.
If the subgroups contain different individuals, we can choose @option{--error uvlr} (for univariate linear regression).
If the subgroups contain exactly the same individuals, we can choose @option{--error mvlr} (for multivariate linear regression, see Wen's preprint on @url{http://arxiv.org/abs/1208.4621,arXiv}).
If the subgroups contain some individuals in common and some not, we can choose @option{--error hybrid}.
For the latter, the effect sizes and their variance are estimated using all individuals in each subgroup,
whereas their covariance are estimated using each pair of subgroups with only individuals in common.

When using @option{--error mvlr} or @option{--error hybrid}, the option @option{--fiterr} is set by default at 0.5.
See Wen's preprint for the rationale.
Also, with @option{--error mvlr}, the summary statistics per subgroup are not exported (in theory it's possible but the current code doesn't allow it easily).
So in this case, if we want to make forest plots, we will have to also launch @command{eqtlbma_bf} with option @option{--error uvlr}.


@section Permutations

Genes having different numbers of SNPs in @emph{cis}, with different patterns of @url{https://en.wikipedia.org/wiki/Linkage_disequilibrium,linkage disequilibrium},
we implemented a permutation procedure @emph{at the gene level} (see Flutre @emph{et al}).
Such a procedure provides a p-value for each gene, required to control the FDR at the gene level,
hence allowing statements such as ``there are X genes having at least one eQTL at an FDR of x%''.

The option @option{--nperm} allows to specify how many permutations will be performed.
We recommend 10,000.
In practice, we permute the individual labels (not the sample labels).
As individuals can be present in several subgroups, we recommend to use @option{--permsep 1}
to preserve such correlation structure when doing a subgroup-by-subgroup analysis.
We can also specify the initialization of the random number generator with the option @option{--seed}
in order to be able to replicate the results exactly.

To speed-up the permutations, we also recommend to use the option @option{--trick 1}.
Indeed, when it is clear that there is no association between the given gene-SNP pair,
it is not necessary to perform 10,000 permutations, a much smaller number is enough,
and this option implements this adaptively for each gene-SNP pair.
It requires another random number generator, which also uses @option{--seed}.
The output file will contain the total number of permutations performed.
The option @option{--tricut} allows to tune the speed gain of the trick:
the smaller the faster (i.e. less permutations are performed when there is no association).
In our experience, using @option{--tricut 10} gives good results.

If we want to compare the two approaches (``separate'' versus ``joint'' analysis), we may want
to use the exact same permutations for both.
Yet we may also want to use the ``trick''.
Specifying @option{--trick 2} allows to do just that and is therefore recommended in this setting.

Finally, the option @option{--pbf} specifies which BF is used as a test statistic when @option{--type join}.
The BF called ``BMA'' in Flutre @emph{et al} corresponds to @option{--pbf all},
and the BF called ``BMAlite'' corresponds to @option{--pbf gen-sin}.

@c=============================================================================

@node Computing Bayes factors
@chapter Computing Bayes factors

@cindex analysis

For a quick and simple analysis, the command line can look like this:
@verbatim
eqtlbma_bf \
--geno list_genotypes.txt \
--scoord snp_coords.bed.gz \
--exp list_explevels.txt \
--gcoord gene_coords.bed.gz \
--out output_eqtlbma \
--outss \
--type join \
--gridL grid_phi2_oma2_general.txt.gz \
--gridS grid_phi2_oma2_with-configs.txt.gz \
--bfs all
@end verbatim

When dealing with many genes (e.g. 20,000) and SNPs (e.g. 5 millions),
we recommend to split the analysis in batches and launch them in parallel.
To simplify this, i.e. to avoid the burden of creating new input files,
we can have several BED files with different subsets of genes.

Let's say that we want 100 batches, we only need to split all the genes into 100 lists.
An FAQ entry below indicates how to do this easily.

Then, we can use the script @command{eqtlbma_bf_parallel.bash} present 
in the directory @command{scripts/} of the package.

A typical command-line looks like this (works with Sun Grid Engine):
@verbatim
qsub -cwd -j y -V -l h_vmem=2g -N job_eqtlbma -t 1-100 \
eqtlbma_bf_parallel.bash \
--p2b ~/bin/eqtlbma_bf \
--geneD lists_genes \
--snpD lists_snps \
--seedF list_seeds.txt.gz \
--geno list_genotypes.txt \
--scoord snp_coords.bed.gz \
--exp list_expressions.txt \
--out out_eqtlbma \
--type join \
--gridL grid_phi2_oma2_general.txt.gz \
--gridS grid_phi2_oma2_with-configs.txt.gz \
--bfs all
--error mvlr \
--nperm 10000 \
--trick 2 \
--pbf gen-sin
@end verbatim

Note that you can also use the option @option{--snp} if you want to analyse
only a subset of all SNPs per batch, e.g. only those in @emph{cis} of the genes
in the corresponding batch.
An FAQ entry shows how to find SNPs in @emph{cis} for each gene.

@c=============================================================================

@node Reading the outputs
@chapter Reading the outputs

@cindex outputs

The program @command{eqtlbma_bf} creates several output files, all starting with 
the character string given to option @option{--out}, e.g. ``out_eqtlbma''
(remember to include the batch number when you parallelize yourselves,
otherwise @command{eqtlbma_bf_parallel.bash} does it automatically).
All output files contain a header line, which should make it easy to understand
what each file contains, as well as load each file into R.

If @option{--outss} is set and @option{--error mvlr} is not, one file is created per subgroup with some summary statistics.
They have the suffix ``_sumstats_<subgroup>.txt.gz''.
These summary statistics can be used to draw forest plots.
For steps 2 and 5, there will also be file(s) with the results of the permutations.
If @option{--permsep 1} was given, there will be one such file, with suffix ``_sepPermPvals.txt.gz''.
If @option{--permsep 2} was given, there will be one file per subgroup, with suffix ``_sepPermPvals_<subgroup>.txt.gz''.

One file contains all the BFs averaged over the grid, with suffix ``_l10abfs_avg-grids.txt.gz''.
If option @option{--outraw} was given, there will also be one file with all the raw BFs,
i.e. one per config per grid value, with suffix ``_l10abfs_raw.txt.gz''.
Such files are necessary to run the hierarchical model with @command{eqtlbma_hm} (see below).
For steps 4 and 5, there will also be a file with the results of the permutations,
with suffix ``_jointPermPvals.txt.gz''.

An FAQ entry describes how to concatenate the output files from all batches,
for instance to have all ``_sumstats_<subgroup>.txt.gz'' batch files into a single file.

@c=============================================================================

@node Fitting the hierarchical model
@chapter Fitting the hierarchical model

@cindex hierarchical model

The @command{eqtlbma_hm} program can take several options, available in the command line via @command{eqtlbma_hm -h}.

The option @option{--data} requires the input file with the Bayes Factors,
typically the output file from @command{eqtlbma_bf} with suffix ``_l10abfs_raw.txt.gz''.
We can also give a file pattern (a @url{https://en.wikipedia.org/wiki/Glob_%28programming%29,glob}),
such as @option{--data ``out_eqtlbma_[0-9][0-9][0-9]_l10abfs_raw.txt.gz''},
where ``[0-9][0-9][0-9]'' corresponds to the batch numbers (e.g. 001, 002, ..., 100).

The option @option{--nsubgrp} requires the number of subgroups, e.g. 3.

The option @option{--dim} requires the number of configurations to considered (i.e. the dimension of the latent space).
More specifically, it corresponds to the number of active configurations, e.g. 7 if there are 3 subgroups.

The option @option{--ngrid} requires the number of grid points to consider.
For instance, if we launched @command{eqtlbma_bf} with a ``small'' grid of 10 points (@math{\phi_l^2,\omega_l^2}),
we need to specify @option{--ngrid 10}.

The option @option{--out} requires the name of the output file, which will be gzipped.
The first lines start with a @url{https://en.wikipedia.org/wiki/Hashtag,hashtag} 
and correspond to the estimates of the hyperparameters,
along with their confidence intervals (if option @option{--getci} was given).
By default, these lines will be considered as comments by R and won't be loaded.
Then, if the option @option{--getbf} was given, the rest of the file contains averaged Bayes Factors 
for each gene and gene-SNP pair.

The option @option{--init} can take an initialization file.
It should have 3 columns separated by a tabulation and one line per parameter.
The first column should contain the name of the parameter, such as ``config.1-2-3'' or ``grid.1''.
The second column should contain the value of the parameter.
The third column should contain a boolean, encoded as TRUE or FALSE, indicating if the parameter should be kept fixed or not.
Note that all parameters should be present in the file.

The option @option{rand} can be used to randomly initialize the parameters at the beginning of the EM.
To make inference replicable, we can sue the option @option{seed}.

The option @option{--tresh} can be given the threshold to terminate the EM algorithm.
That is, if the log-likelihood increases less than this threshold, the iterations stop.
The default value is set at 0.05.

In order to speed-up the computations greatly, the option @option{--thread} can be given
a number of threads (the code uses @url{https://en.wikipedia.org/wiki/OpenMP,OpenMP}).

If we want to fit the hierarchical model using only a pair of subgroups, we can use the option @option{--configs}.
For instance, among 3 subgroups, to only load the Bayes Factors corresponding to subgroups 1 and 3,
we would do @option{--configs ``1|3|1-3''}.

The option @option{--getci} can be set in order to compute and return 95% confidence intervals 
using the @url{https://en.wikipedia.org/wiki/Likelihood_function#Profile_likelihood,profile likelihood}.
However, this is not multi-threaded and can therefore be quite long.
Otherwise, only the maximum-likelihood estimates of the hyperparameters are returned.

By default, only the estimates of the hyperparameters (gene-level @math{\pi_0}, grid and configuration weights) 
are returned in the output file.
We can use option @option{--getbf} in order to also get the Bayes Factor for each gene and each gene-SNP pair, 
as well as the BF for each configuration, which can take a lot of time to compute and result in a big file.
We would hence surely prefer to use the @command{eqtlbma_avg_bfs} program (see below) which offers more flexibility 
about which quantities to compute (averaged Bayes Factors, various posteriors).

The gene-level @math{\pi_0} (the probability for a gene to have no eQTL) 
is hard to estimate accurately, therefore it can be useful to estimate it by another method 
and set it manually to see how it impacts the estimates of the other hyperparameters.
We can easily do it using option @option{--pi0}, meaning that pi0 won't be updated by the EM algorithm.
Another way is to use a file with @option{--init}, but in that case all other parameters should also be present in the file.

Finally, the command-line will typically look like this:
@verbatim
eqtlbma_hm \
--data ``out_eqtlbma_*_l10abfs_raw.txt.gz'' \
--nsubgrp 7 \
--ngrid 10 \
--out out_hm.txt.gz \
--thread 4
@end verbatim

After launching the @command{eqtlbma_hm} program, we can follow the EM iterating on stdout.

Then, if option @option{--getbf} was not given, we can use the @command{eqtlbma_avg_bfs} program 
to compute the final quantities of interest, e.g. posteriors.

@c=============================================================================

@node Frequently asked questions
@chapter Frequently asked questions

@cindex FAQ

@itemize

@item
@strong{How do I cite this package?}

Flutre T, Wen X, Pritchard J, Stephens M (2013) A Statistical Framework for Joint eQTL Analysis in Multiple Tissues. PLoS Genet 9(5): e1003486. doi:10.1371/journal.pgen.1003486

@sp 1

@item
@strong{How do I make the file(s) for the grid(s)?}

See the function @option{MakeGrid} in the file @command{scripts/utils_eqtlbma.R}.
A typical code would look like this:
@verbatim
gridL <- MakeGrid(``general'')
write.table(x=gridL, file=gzfile(``grid_phi2_oma2_general.txt.gz''),
            quote=FALSE, row.names=FALSE, col.names=FALSE)
gridS <- MakeGrid(``configs'')
write.table(x=gridS, file=gzfile(``grid_phi2_oma2_with-configs.txt.gz''),
            quote=FALSE, row.names=FALSE, col.names=FALSE)
@end verbatim

@sp 1

@item
@strong{How do I transform my phenotypes beforehand into the quantiles of a standard Normal?}

See the function @option{TransformGeneExpInStdNormal} in the file @command{scripts/utils_eqtlbma.R}.

@sp 1

@item
@strong{How do I split the BED file of gene coordinates in 100 batches?}

Using GNU tools and assuming the coordinates are in a file named ``gene_coords.bed.gz'':

@verbatim
nbBatches="100"; mkdir lists_genes; cd lists_genes; \
zcat ../gene_coords.bed.gz | cut -f1-4 | split \
-l $(echo "scale=0; $(zcat ../gene_coords.bed.gz | wc -l)/${nbBatches}" | bc -l) \
--suffix-length=3 --numeric-suffixes=1 --additional-suffix=.bed \
--filter='gzip > $FILE.gz' - list_genes_; cd ..
@end verbatim

This will create around 100 files in a directory, such as ``lists_genes/list_genes_001.bed.gz''.

@sp 1

@item
@strong{How do I get a file with SNPs in @emph{cis} for each batch of genes?}

Using @url{http://bedtools.readthedocs.org/en/latest/,BEDTools}, it's quite easy.
As it can take some time, we can use @url{http://www.gnu.org/software/parallel/,GNU parallel} to speed this up:

@verbatim
rm -rf lists_snps; mkdir lists_snps; \
seq -w 1 $(ls lists_genes/* | wc -l) | \
parallel 'i={}; bedtools window -w 100000 -a lists_genes/list_genes_${i}.bed.gz \
-b snp_coords.bed.gz | \
cut -f8 | sort | uniq | gzip > lists_snps/list_snps_${i}.txt.gz'
@end verbatim

Change the "100000" into "1000000" if you want a 1Mb radius instead of a 100Kb radius for the @emph{cis} window.
Note also that, if you want a @emph{cis} region centered on the TSS only (i.e. neglecting the TES), 
you will first have to modify the file "gene_coords.bed.gz":

@verbatim
zcat gene_coords.bed.gz \
| awk 'BEGIN{OFS="\t"} {print $1,$2,$2+1,$4}' \
| gzip > gene_coords_TSS.bed.gz
@end verbatim

@sp 1

@item
@strong{How do I easily concatenate the output files from all batches?}

When launching @command{eqtlbma_bf} in parallel, you will get output files for each batch.
Below are simple bash commands to concatenate them into a single file and compress it,
for instance the summary statistics of a given subgroup:
@verbatim
sbgrp="Tissue3"; i=0; \
ls out_eqtlbma_[0-9][0-9][0-9]_sumstats_${sbgrp}.txt.gz | while read f; do \
let i=i+1; echo $i; \
if [ $i -eq "1" ]; then zcat $f > out_eqtlbma_sumstats_${sbgrp}.txt; \
else zcat $f | sed 1d >> out_eqtlbma_sumstats_${sbgrp}.txt; fi; done
gzip out_eqtlbma_sumstats_${sbgrp}.txt
@end verbatim

@sp 1

@item
@strong{Is this packaged tested?}

We implemented some R code in order to perform functional tests on @command{eqtlbma_bf}.
Launching them is automatized via @option{make check}.

You can also find in the @command{src/} directory the code used to simulate data as in Flutre @emph{et al}.
To compile it, enter into the @command{src/} directory and run @command{grep ``g++'' simul_flutre_et_al.cpp} 
to see how to do it.
As usual, a help message is available with the option @command{-h}.

@sp 1

@item
@strong{How can I contribute?}

The code of the package is freely available on @url{http://github.com/timflutre/eqtlbma,Github}, 
so you can fork it and let us know of any pull request.

@end itemize


@node GNU Free Documentation License
@appendix GNU Free Documentation License

@include fdl.texi


@node Index
@unnumbered Index

@printindex cp

@bye
